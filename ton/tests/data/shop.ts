import { Dictionary, toNano } from "@ton/core";
import { dictValueParserNftType, NftType } from "../../wrappers/NFTShop";

export function getDictForShop(): Dictionary<bigint, NftType> {
    const charactersData = [
        { id: 0n, price:  toNano(2)},  
        { id: 1n, price:  toNano(2)},  
        { id: 2n, price:  toNano(2)},
        { id: 3n, price:  toNano(2)},  
        { id: 4n, price:  toNano(2)},  
        { id: 5n, price:  toNano(2)},
        { id: 6n, price:  toNano(2)},
        { id: 7n, price:  toNano(2)},
        { id: 8n, price:  toNano(2)},
        { id: 9n, price:  toNano(2)}
    ];
    const armorsData = [
        { id: 0n, price:  toNano(0.60     )},  
        { id: 1n, price:  toNano(1.98     )},  
        { id: 2n, price:  toNano(3.58     )},
        { id: 3n, price:  toNano(5.98     )},  
        { id: 4n, price:  toNano(6.98     )},  
        { id: 5n, price:  toNano(9.58     )},
        { id: 6n, price:  toNano(15.54    )},  
        { id: 7n, price:  toNano(19.98    )},  
        { id: 8n, price:  toNano(1.80     )},
        { id: 9n, price:  toNano(1.80     )},  
        { id: 10n, price: toNano(4.40     )}, 
        { id: 11n, price: toNano(4.80     )},
        { id: 12n, price: toNano(0.80     )},
        { id: 13n, price: toNano(1.00     )}, 
        { id: 14n, price: toNano(1.60     )},
        { id: 15n, price: toNano(2.00     )}, 
        { id: 16n, price: toNano(9.00     )}, 
        { id: 17n, price: toNano(1.00     )},
        { id: 18n, price: toNano(4.80     )}, 
        { id: 19n, price: toNano(9.00     )}, 
        { id: 20n, price: toNano(9.00     )},
        { id: 21n, price: toNano(1.60     )},
        { id: 22n, price: toNano(0.60     )}, 
        { id: 23n, price: toNano(10.00    )},
        { id: 24n, price: toNano(11.00    )}, 
        { id: 25n, price: toNano(0.70     )}, 
        { id: 26n, price: toNano(14.00    )},
        { id: 27n, price: toNano(0.50     )}, 
        { id: 28n, price: toNano(5.00     )}, 
        { id: 29n, price: toNano(0.70     )},
        { id: 30n, price: toNano(6.00     )}, 
        { id: 31n, price: toNano(13.00    )}, 
        { id: 32n, price: toNano(15.00    )}
    ];
    const bootsData = [
        { id: 0n, price:  toNano(0.86 )},  
        { id: 1n, price:  toNano(1.98)},  
        { id: 2n, price:  toNano(3.58)},
        { id: 3n, price:  toNano(6.38)},  
        { id: 4n, price:  toNano(10.38)},  
        { id: 5n, price:  toNano(13.18)},
        { id: 6n, price:  toNano(15.54)},  
        { id: 7n, price:  toNano(19.98)},  
        { id: 8n, price:  toNano(0.80)},
        { id: 9n, price:  toNano(8.80)},  
        { id: 10n, price: toNano(1.80)}, 
        { id: 11n, price: toNano(14.00)},
        { id: 12n, price: toNano(4.00)}, 
        { id: 13n, price: toNano(8.80)}, 
        { id: 14n, price: toNano(3.80)},
        { id: 15n, price: toNano(14.40)}, 
        { id: 16n, price: toNano(13.60)}, 
        { id: 17n, price: toNano(14.00)},
        { id: 18n, price: toNano(13.00)}, 
        { id: 19n, price: toNano(4.20)}, 
        { id: 20n, price: toNano(3.60)},
        { id: 21n, price: toNano(4.00)}, 
        { id: 22n, price: toNano(2.00)}, 
        { id: 23n, price: toNano(1.60)},
        { id: 24n, price: toNano(2.00)},
        { id: 25n, price: toNano(1.80)}, 
        { id: 26n, price: toNano(10.00)},
        { id: 27n, price: toNano(9.60)}, 
        { id: 28n, price: toNano(8.80)}, 
        { id: 29n, price: toNano(13.60)},
        { id: 30n, price: toNano(4.20)}, 
        { id: 31n, price: toNano(1.60)}, 
        { id: 32n, price: toNano(9.00)},
    ];
    const weaponsData = [
        { id: 0n, price:  toNano(0.98)},  
        { id: 1n, price:  toNano(0.84)},  
        { id: 2n, price:  toNano(3.10)},
        { id: 3n, price:  toNano(0.74)},  
        { id: 4n, price:  toNano(3.80)},  
        { id: 5n, price:  toNano(4.58)},
        { id: 6n, price:  toNano(4.58)},  
        { id: 7n, price:  toNano(5.18)},  
        { id: 8n, price:  toNano(5.58)},
        { id: 9n, price:  toNano(5.98)},  
        { id: 10n, price: toNano(5.38) }, 
        { id: 11n, price: toNano(7.98) },
        { id: 12n, price: toNano(5.98) }, 
        { id: 13n, price: toNano(15.58) }, 
        { id: 14n, price: toNano(6.60) },
        { id: 15n, price: toNano(8.60) }, 
        { id: 16n, price: toNano(10.00) }, 
        { id: 17n, price: toNano(5.40) },
        { id: 18n, price: toNano(8.00) }, 
        { id: 19n, price: toNano(14.60) }, 
        { id: 20n, price: toNano(4.80) },
        { id: 21n, price: toNano(6.80) }, 
        { id: 22n, price: toNano(10.40) }, 
        { id: 23n, price: toNano(3.00) },
        { id: 24n, price: toNano(7.20) }, 
        { id: 25n, price: toNano(15.00) }, 
        { id: 26n, price: toNano(4.60) },
        { id: 27n, price: toNano(8.00) }, 
        { id: 28n, price: toNano(14.80) }, 
        { id: 29n, price: toNano(4.00) },
        { id: 30n, price: toNano(5.80) }, 
        { id: 31n, price: toNano(5.90) }, 
        { id: 32n, price: toNano(17.40) },
        { id: 33n, price: toNano(2.60) }, 
        { id: 34n, price: toNano(3.20) }, 
        { id: 35n, price: toNano(8.20) },
        { id: 36n, price: toNano(7.20) }, 
        { id: 37n, price: toNano(3.60) }, 
        { id: 38n, price: toNano(12.20) },
        { id: 39n, price: toNano(3.80) }, 
        { id: 40n, price: toNano(5.00) }, 
        { id: 41n, price: toNano(2.80) },
        { id: 42n, price: toNano(11.98) }, 
        { id: 43n, price: toNano(4.80) }, 
        { id: 44n, price: toNano(5.60) },
        { id: 45n, price: toNano(3.80) }, 
        { id: 46n, price: toNano(5.60) }, 
        { id: 47n, price: toNano(16.60) },
        { id: 48n, price: toNano(11.40) }, 
        { id: 49n, price: toNano(13.38) }, 
        { id: 50n, price: toNano(8.00) },
        { id: 51n, price: toNano(20.00) }, 
        { id: 52n, price: toNano(4.20) }, 
        { id: 53n, price: toNano(5.60) },
        { id: 54n, price: toNano(6.80) }, 
        { id: 55n, price: toNano(7.60) }, 
        { id: 56n, price: toNano(3.40) },
        { id: 57n, price: toNano(5.20) }, 
        { id: 58n, price: toNano(3.20) }, 
        { id: 59n, price: toNano(3.40) },
        { id: 60n, price: toNano(5.00) }, 
        { id: 61n, price: toNano(6.40) }, 
        { id: 62n, price: toNano(12.80) },
        { id: 63n, price: toNano(3.60) }, 
        { id: 64n, price: toNano(5.80) }, 
        { id: 65n, price: toNano(2.80) },
        { id: 66n, price: toNano(3.40) }, 
        { id: 67n, price: toNano(12.00) }, 
        { id: 68n, price: toNano(12.40) },
        { id: 69n, price: toNano(8.60) }, 
        { id: 70n, price: toNano(7.40) }, 
        { id: 71n, price: toNano(1.20) },
        { id: 72n, price: toNano(2.60) }, 
        { id: 73n, price: toNano(4.60) }, 
        { id: 74n, price: toNano(3.60) },
        { id: 75n, price: toNano(7.80) }, 
        { id: 76n, price: toNano(12.60) }, 
        { id: 77n, price: toNano(6.00) },
        { id: 78n, price: toNano(15.20) }, 
        { id: 79n, price: toNano(14.60) }, 
        { id: 80n, price: toNano(10.80) },
        { id: 81n, price: toNano(6.20) }, 
        { id: 82n, price: toNano(7.20) }, 
        { id: 83n, price: toNano(14.20) },
        { id: 84n, price: toNano(15.00) }, 
        { id: 85n, price: toNano(0.80) }, 
        { id: 86n, price: toNano(1.00) },
        { id: 87n, price: toNano(2.40) }, 
        { id: 88n, price: toNano(0.90) }, 
        { id: 89n, price: toNano(0.67) },
        { id: 90n, price: toNano(1.00) }, 
        { id: 91n, price: toNano(2.00) }, 
        { id: 92n, price: toNano(4.80) },
        { id: 93n, price: toNano(0.88) }, 
        { id: 94n, price: toNano(2.20) }, 
        { id: 95n, price: toNano(4.00) },
        { id: 96n, price: toNano(3.20) }, 
        { id: 97n, price: toNano(0.60) }, 
        { id: 99n, price: toNano(6.60) },
        { id: 100n, price:toNano(6.80)  },
        { id: 101n, price:toNano(11.11)  },
        { id: 102n, price:toNano(3.60)  },
        { id: 103n, price:toNano(13.33)  },
        { id: 104n, price:toNano(14.00)  },
        { id: 105n, price:toNano(8.00)  },
        { id: 106n, price:toNano(12.80)  },
        { id: 107n, price:toNano(15.00)  },
        { id: 108n, price:toNano(4.44)  },
        { id: 109n, price:toNano(16.00)  },
        { id: 110n, price:toNano(8.98)  },
        { id: 111n, price:toNano(19.20)  },
        { id: 112n, price:toNano(5.60)  },
        { id: 113n, price:toNano(16.60)  },
        { id: 114n, price:toNano(2.80)  },
        { id: 115n, price:toNano(4.80)  },
        { id: 116n, price:toNano(14.80)  },
        { id: 117n, price:toNano(1.80)  },
        { id: 118n, price:toNano(2.60)  },
        { id: 119n, price:toNano(4.00)  },
        { id: 120n, price:toNano(1.40)  },
        { id: 121n, price:toNano(20.00)  },
        { id: 122n, price:toNano(20.00)  },
        { id: 123n, price:toNano(4.44)  },
        { id: 124n, price:toNano(17.78)  },
        { id: 125n, price:toNano(5.00)  },
        { id: 126n, price:toNano(3.40)  },
        { id: 127n, price:toNano(15.00)  },
        { id: 128n, price:toNano(3.80)  },
        { id: 129n, price:toNano(4.80)  },
        { id: 130n, price:toNano(9.50)  },
        { id: 131n, price:toNano(6.00)  },
        { id: 132n, price:toNano(9.00)  },
        { id: 133n, price:toNano(19.80)}
    ];
    let pricesCharacters: Dictionary<bigint, bigint> = Dictionary.empty(Dictionary.Keys.BigInt(257), Dictionary.Values.BigInt(257));
    let pricesArmors: Dictionary<bigint, bigint> = Dictionary.empty(Dictionary.Keys.BigInt(257), Dictionary.Values.BigInt(257));
    let pricesBoots: Dictionary<bigint, bigint> = Dictionary.empty(Dictionary.Keys.BigInt(257), Dictionary.Values.BigInt(257));
    let pricesWeapons: Dictionary<bigint, bigint> = Dictionary.empty(Dictionary.Keys.BigInt(257), Dictionary.Values.BigInt(257));
    // Заполняем словарь данными.
    charactersData.forEach(item => {
        pricesCharacters.set(item.id, item.price);
    });
    armorsData.forEach(item => {
        pricesArmors.set(item.id, item.price);
    });
    bootsData.forEach(item => {
        pricesBoots.set(item.id, item.price);
    });
    weaponsData.forEach(item => {
        pricesWeapons.set(item.id, item.price);
    });
    let nftItems: Dictionary<bigint, NftType> = Dictionary.empty(Dictionary.Keys.BigInt(257), dictValueParserNftType());
    nftItems.set(BigInt(0), {
        $$type: 'NftType',
        data: 'https://ipfs.io/ipfs/QmVVzQ5kUJ8cArTTgj5gCZ1kp42Fo4FWUfXLM386vDBT6T/',
        prices: pricesCharacters
    });
    nftItems.set(BigInt(1), {
        $$type: 'NftType',
        data: 'https://ipfs.io/ipfs/QmSyjEq4hkGESu8eZDvBJA4VgZsixKzYJxSyNLYVYUTuci/',
        prices: pricesArmors
    });
    nftItems.set(BigInt(2), {
        $$type: 'NftType',
        data: 'https://ipfs.io/ipfs/QmfF3VLRTFJkVadJFPuykkv4m11DBHXnCo9V6PAZAGyBsE/',
        prices: pricesBoots
    });
    nftItems.set(BigInt(3), {
        $$type: 'NftType',
        data: 'https://ipfs.io/ipfs/QmQ9zM41VRfDWLNXQPcsYm55NyLHfoQJDdbyP2wKDrMMnV/',
        prices: pricesWeapons
    });
    return nftItems
}